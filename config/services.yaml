# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'fr'
  api_dir_name: '/CatalogueWebService/api/'
  api_base_url: "http://%env(CATALOG_API_HOST)%%api_dir_name%"

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
      # fetching services directly from the container via $container->get() won't work.
      # The best practice is to be explicit about your dependencies anyway.

    bind:
      $root_dir: '%kernel.root_dir%'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
      resource: '../src/*'
      exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Model,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Service\APIClient\CatalogClient:
    arguments:
    - '@eight_points_guzzle.client.bpi_catalog'

  App\Service\ImageBuilderService:
    arguments:
      - '%kernel.project_dir%/public/'
  App\Service\HistoryService:
    arguments: ['@doctrine.orm.entity_manager']
  App\Service\SelectionListService:
    arguments: ['@doctrine.orm.entity_manager']
  App\Service\SearchService:
    arguments:
      $logger : '@monolog.logger'
  App\Service\BreadCrumbBuilder:
    arguments: ['@doctrine.orm.entity_manager']
  App\Twig\MenuCreator:
    arguments:
      $translationPath : '%kernel.project_dir%/translations'

  Symfony\Component\Ldap\Ldap:
    arguments: ['@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter']
  Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
    arguments:
    -   host: '%env(LDAP_HOST)%'
        port: '%env(LDAP_PORT)%'
#        encryption: tls
        options:
          protocol_version: 3
          referrals: false

  App\Provider\BpiLdapUserProvider:
    arguments:
      - '@Symfony\Component\Ldap\Ldap'
      - '%env(LDAP_BASE_DN)%'
      - '%env(LDAP_SEARCH_DN)%'
      - '%env(LDAP_PASSWORD)%'
      - ['ROLE_USER']
      - ['mail', 'sn','cn', 'pseudo', 'uid', 'entryUUID']
      - mail

  App\Service\MailSenderService:
    arguments:
      - '%env(MAIL_SENDER)%'
      - '%env(REPLY_TO_EMAIL)%'

  App\EventListener\AuthenticationListener:
    tags:
    - { name: 'kernel.event_listener', event: 'security.interactive_login' }

  twig.extension.text:
    class: Twig_Extensions_Extension_Text
    tags:
    - { name: twig.extension }

  app.param_converter.bpi_converter:
    class: App\Request\ParamConverter\BpiConverter
    tags:
    - { name: request.param_converter, priority: -2, converter: bpi_converter }

  App\EventListener\ExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception }
