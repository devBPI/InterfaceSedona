{% import "common/notice-available-macro.html.twig" as macros %}
{% if notice is not empty %}
    <div class="list-result__content-item js-list-result-item" lang="fr" role="listitem">
        <div class="list-result__content-selector">
            <input type="checkbox" id="result-doc-{{ type }}-{{ index }}"
                   class="js-notice addableInList notice_{{ type }}"
                   name="{% if  type == constant('App\\Model\\Notice::SEE_ONLINE') %}online[]{% else %}onshelves[]{% endif %}"
                   value="{{ notice.permalink }}"
                   data-notice="{{ notice.permalink }}"
                {% if mode is defined and mode == 'detail' %}checked="checked"{% endif %}>
            <label for="result-doc-{{ type }}-{{ index }}">
                <span class="sr-only">{{ 'bloc.notice-simple.result'|trans }} {{ index }}, {{ 'bloc.notice-simple.select'|trans }} {{ notice.frontTitle }}</span>
                {{ index }}
            </label>

            {% from 'search/blocs-results/macros.html.twig' import add_to_list_form %}
            {{ add_to_list_form(
                notice.permalink,
                path('record_bibliographic', {'permalink': notice.permalink}),
                notice.frontTitle,
                notice.frontAuthor|join('; '),
                notice.type,
                class_name(notice)
            ) }}
        </div>

        {% set contextToken = (objSearch is defined ? objSearch.contextToken : null) %}
        <div class="list-result__content-body">
            <div class="list-result__content-image">
                <a href="{{ path('record_bibliographic', {'permalink': notice.permalink, (constant('App\\Model\\Search\\ObjSearch::PARAM_REQUEST_NAME')): contextToken}) }}">
                    <img src="{{ path('binary_image', {"content":notice.image, 'type': notice.type | slugify})}}" alt="{{ notice.frontTitle }}" class="img-fluid" />
                </a>
            </div>
            <div class="list-result__content-infos js-seeMoreAvailability" >
                <a href="{{ path('record_bibliographic', {'permalink': notice.permalink, (constant('App\\Model\\Search\\ObjSearch::PARAM_REQUEST_NAME')): contextToken}) }}"
                   lang="fr"
                   class="n2 list-result__content-title"
                >
                    <img src="{{ asset('images/types/type-' ~ notice.slugifiedType ~ '.svg') }}" alt="{{ notice.type }}" class="list-result__content-type" />
                    <span>{{ notice.frontTitle }}</span>
                </a>
                {% if notice.type in constant('App\\Model\\Notice::NOTICE_CONTENT_REVUE_TYPE') and  notice.frontAnalyticalTitle is not empty %}
                    <p lang="fr"><span class="font-italic">Dans</span> {{ notice.frontAnalyticalTitle }}</p>
                {% endif %}

                {% if notice.frontAuthor is not empty %}
                    <p lang="fr"><span class="font-italic">par</span> {{ notice.frontAuthor|join('; ') }}</p>
                {% endif %}
                <p lang="fr">
                {{ notice.frontDate }}
                    {% if notice.frontResume is not empty %}
                        {% set title = 'bloc.notice-simple.resume-title' %}
                        {% if notice.type in constant('App\\Model\\Notice::NOTICE_CONTENU_TYPE') %}
                            {% set title = 'modal.comments-edit.field-content' %}
                        {% endif %}
                    - <button class="list-result__content-resume" type="button"
                            role="tooltip" data-toggle="tooltip" title="{{ title |trans }} : {{ notice.frontResume }}">
                        <img src="{{ asset('images/icones/icone-resume.svg') }}" alt=""/>
                        <span class="sr-only">{{ 'bloc.notice-simple.resume-label'|trans }}</span>
                    </button>
                    {% endif %}
                </p>


                {% if notice.type == constant('App\\Model\\Notice::VIDEO') and notice.formats is not empty  %}
                    <p lang="fr">{{ notice.formats }}</p>
                {% endif %}
                {% if notice.configurationName is not empty and notice.configurationName != constant('App\\Model\\Notice::CATALOGUE_BPI') %}
                    <p lang="fr">Résultat de <a href="{{ notice.configurationUrl }}" aria-label="Acceder à {{ notice.configurationName }}" target="_blank">{{ notice.configurationName }}</a></p>
                {% endif %}

                {% for available in notice.copies %}
                    {{ macros.availibility(available, notice) }}

                    {% if loop.first and not loop.last %}
                        <button type="button" class="btn btn-small-link" data-toggle="collapse"
                                data-target="#availabity-items-{{ index }}" aria-expanded="false"
                                aria-controls="availabity-items-{{ index }}">
                            {{ 'global.see-more'|trans }}
                        </button>
                        <div class="collapse" id="availabity-items-{{ index }}">
                    {% endif %}

                    {% if not loop.first and loop.last %}
                        </div>
                    {% endif %}
                {% endfor %}
                {% for link in notice.links %}
                    {{macros.availibility(link, notice) }}
                    {% if loop.first and not loop.last %}
                        <button type="button" class="btn btn-small-link" data-toggle="collapse"
                                data-target="#links-items-{{ index }}" aria-expanded="false"
                                aria-controls="links-items-{{ index }}">
                            {{ 'global.see-more'|trans }}
                        </button>
                        <div class="collapse" id="links-items-{{ index }}">
                    {% endif %}

                    {% if not loop.first and loop.last %}
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
            {% if app.request.get('see-all') and app.request.get('see-all') in [constant('App\\Model\\Notice::SEE_ONLINE'),constant('App\\Model\\Notice::SEE_ONSHELF')] and notice.frontResume %}
                <div class="list-result__content-txt">
                    {% set title = 'bloc.notice-simple.resume-title' %}
                    {% if notice.type in constant('App\\Model\\Notice::NOTICE_CONTENU_TYPE') %}
                        {% set title = 'modal.comments-edit.field-content' %}
                    {% endif %}

                    <p lang="fr">{{ title |trans }} : {{ notice.frontResume }}</p>
                </div>
            {% endif %}
        </div>
    </div>
{% endif %}
