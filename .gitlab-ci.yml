stages:
  - quality
  - build
  - publish
  - deploy

variables:
  RANCHER_CLI_VERSION: "v0.6.10"
  STACK_NAME: "bpi-catalogue"
  SENSIO_INSIGHT_PROJECT_ID: "d00b38e4-085a-4648-b87f-86de05d98aab"
  MAVEN_DOCKER_IMAGE: "registry.sedona.fr/images/maven:latest-gitlab-ci"

cache:
  key: "$CI_PIPELINE_ID-$CI_COMMIT_REF_NAME"
  untracked: false
  paths:
    - build/
    - htmlpage/
    - gl-code-quality-report.json

quality:sonar:
  stage: quality
  image: $MAVEN_DOCKER_IMAGE
  script:
    - sed -i -E "s/sonar.projectVersion=[^)]+/sonar.projectVersion=$CI_COMMIT_REF_NAME/g" sonar-project.properties
    - 'sonar-scanner'

quality:insight:
  stage: quality
  image: "registry.sedona.fr/images/php:7-fpm"
  script:
    - apt-get install -y -qq jq wget
    - export PR_ID=$(curl -s "https://git.sedona.fr/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${USER_TOKEN}&state=opened" | jq -r ".[]|select(.sha == \"$CI_COMMIT_SHA\")|.iid")
    - echo $PR_ID
    - >
        if [[ ! -z "$PR_ID" ]] ; then
            wget https://github.com/bdemalglaive/insight/raw/master/build/insight.phar
            php insight.phar diff ${SENSIO_INSIGHT_PROJECT_ID} --user-uuid=${SENSIO_INSIGHT_USER_UUID} --api-token=${SENSIO_INSIGHT_USER_TOKEN} --format=md --reference-base=$(git rev-parse master) --reference-head=$(git rev-parse HEAD) > gl-code-quality-report.json
            export LAST_NOTES_ID=$(curl -s "https://git.sedona.fr/api/v4/projects/${CI_PROJECT_ID}/merge_requests/${PR_ID}/notes?private_token=LkssJDBWsn4TuspWeQty&state=opened" | jq -r ".[]|select(.author.id == 106)|.id")
            [ -z "${LAST_NOTES_ID}" ] && curl -i -X POST -H 'Content-Type: application/json' -d '@gl-code-quality-report.json' "https://git.sedona.fr/api/v4/projects/${CI_PROJECT_ID}/merge_requests/${PR_ID}/notes?private_token=${USER_TOKEN}" || curl -i -X PUT -H 'Content-Type: application/json' -d '@gl-code-quality-report.json' "https://git.sedona.fr/api/v4/projects/${CI_PROJECT_ID}/merge_requests/${PR_ID}/notes/${LAST_NOTES_ID}?private_token=${USER_TOKEN}"
        fi
  artifacts:
    paths: [gl-code-quality-report.json]

quality:w3c:
  stage: quality
  image: registry.sedona.fr/images/php:7
  script:
    - make .env c-install behat-w3c
  artifacts:
    name: "test"
    paths:
      - build/
    when: on_failure
    expire_in: 20 minutes
    untracked: true

build:package:
 stage: build
 image: registry.sedona.fr/images/php:7
 only:
    - master
    - tags
 cache:
    key: "$CI_PIPELINE_ID-$CI_COMMIT_REF_SLUG"
    untracked: true
    policy: push
    paths:
     - build/
 artifacts:
    untracked: false
    expire_in: 30 mins
    paths:
     - build/
 script:
    - make .env default clean

build:image:
  stage: build
  image: docker:latest
#  only:
#    - master
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.sedona.fr
    - apk update
    - apk add make
  script:
    - APP_IMAGE_TAG=$(make show-var-DOCKER_TAG)
    - DB_IMAGE_TAG=${APP_IMAGE_TAG/\/site/\/db}
    - make image
    - docker build -t $DB_IMAGE_TAG -f .deploy/db.Dockerfile .deploy


publish:image:
  stage: publish
#  only:
#    - master
  dependencies:
    - build:image
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.sedona.fr
    - apk update
    - apk add make
  script:
    - APP_IMAGE_TAG=$(make show-var-DOCKER_TAG)
    - DB_IMAGE_TAG=${APP_IMAGE_TAG/\/site/\/db}
    - docker push $APP_IMAGE_TAG
    - docker push $DB_IMAGE_TAG
    - docker rmi -f $APP_IMAGE_TAG $DB_IMAGE_TAG


publish:package:
 stage: publish
 image: $MAVEN_DOCKER_IMAGE
 only:
    - master
    - tags
 cache:
    key: "$CI_PIPELINE_ID-$CI_COMMIT_REF_SLUG"
    untracked: true
    policy: pull
    paths:
     - build/
 dependencies:
    - build:package
 script:
    - apt-get -q update
    - apt-get -q install make
    - GROUP_ID=$(make show-var-GROUP_ID)
    - ARTIFACT_ID=$(make show-var-ARTIFACT_ID)
    - VERSION=$(make show-var-VERSION)
    - FILE_NAME=$(make show-var-PACKAGE_NAME)
    - NEXUS_ID=$([ -z "${CI_COMMIT_TAG}" ] && echo "sedona-php-snapshot" || echo "sedona-php-release")
    - NEXUS_URL=$([ -z "${CI_COMMIT_TAG}" ] && echo "php-snapshot" || echo "php-release")
    #- mvn deploy:deploy-file -X -Durl=https://repo.cicd.sedona.fr/artifactory/${NEXUS_URL} -DrepositoryId=${NEXUS_ID} -Dfile=build/${FILE_NAME} -DgroupId=${GROUP_ID} -DartifactId=${ARTIFACT_ID} -Dversion=${version} -Dpackaging=tgz

deploy:rancher_dev:
  stage: deploy
  image:
    name: "rancher/cli:$RANCHER_CLI_VERSION"
    entrypoint: ["/bin/sh", "-c"]
#  only:
#    - master
  when: manual
  environment:
    name: dev-rancher
    url: https://bpi-catalogue.dev.sedona.fr
  script:
    - rancher up --stack $STACK_NAME -d --confirm-upgrade --force-recreate --pull --file .deploy/rancher/docker-compose.yml --rancher-file .deploy/rancher/rancher-compose.yml app
